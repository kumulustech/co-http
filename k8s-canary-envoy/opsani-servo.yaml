---
#apiVersion: apps/v1
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: opsani-servo
  labels:
    comp: opsani-servo
    optune.ai/exclude: '1'  # don't tune servo
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      comp: opsani-servo
  template:
    metadata:
      labels:
        comp: opsani-servo
    spec:
      serviceAccountName: opsani-servo # comment out for older k8s versions
      volumes:
      - name: auth
        secret:
          secretName: optune-auth-co-http   #CHANGEME - application's token for Optune
      - name: config
        configMap:
          name: opsani-servo-config
      containers:
      - name: main
        image: opsani/servo-k8s-prom-hey:latest
        args:
        - '@@APP_ID@@' #CHANGEME - application ID
        - '--auth-token=/etc/optune-auth/token'
        env:
        - name: OPTUNE_ACCOUNT
          value: '@@ACCOUNT@@'  #CHANGEME - account name
        - name: OPTUNE_USE_DEFAULT_NAMESPACE
          value: '1'
        - name: OPTUNE_PERF
          value: opsani.time_slo(canary_median_response_time, target=100)
        - name: PROMETHEUS_ENDPOINT
          value: 'http://prom.svc.cluster.local:9090' #CHANGEME Prometheus API
        - name: HEY_TEST_URL
          value: 'http://web:80/'
        volumeMounts:
        - name: auth
          mountPath: '/etc/optune-auth'
          readOnly: true
        - name: config
          mountPath: /servo/config.yaml
          subPath: config.yaml
          readOnly: true

---
#CHANGEME: replace "web-service_80" below with the correct label representing
#          all co-http pods - both web-main and web-canary

apiVersion: v1
kind: ConfigMap
metadata:
  name: opsani-servo-config
data:
  config.yaml: |
    k8s:
      application:
        components:
          web:
            settings:
              cpu:
                min: 0.1
                max: 2
                step: 0.1
              replicas:
                min: 1
                max: 4
                step: 1
    prom:
      metrics:
        main_request_rate: 
          query: sum(rate(envoy_cluster_upstream_rq_total{app="web",role="main"}[1m]))
          unit: rps
        canary_request_rate:
          query: sum(rate(envoy_cluster_upstream_rq_total{app="web",role="opsani-canary"}[1m]))
          unit: rps
        main_p90_time:
          query: histogram_quantile(0.9,sum(rate(envoy_cluster_external_upstream_rq_time_bucket{app="web",role="main"}[1m])) by (envoy_cluster_name, le))
          unit: ms
        canary_p90_time:
          query: histogram_quantile(0.9,sum(rate(envoy_cluster_external_upstream_rq_time_bucket{app="web",role="opsani-canary"}[1m])) by (envoy_cluster_name, le))
          unit: ms
        main_error_rate:
          query: sum(rate(envoy_cluster_external_upstream_rq_xx{app="web",envoy_response_code_class!="2",role="main"}[1m]))
          unit: rpm
        canary_error_rate:
          query: sum(rate(envoy_cluster_external_upstream_rq_xx{app="web",envoy_response_code_class!="2",role="opsani-canary"}[1m]))
          unit: rpm
        main_median_response_time:
          query: avg(histogram_quantile(0.5,rate(envoy_cluster_external_upstream_rq_time_bucket{app="web",role="main"}[1m])))
          unit: ms 
        canary_median_response_time:
          query: avg(histogram_quantile(0.5,rate(envoy_cluster_external_upstream_rq_time_bucket{app="web",role="opsani-canary"}[1m])))
          unit: ms
